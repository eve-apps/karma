#!/usr/bin/env coffee

# Load dependencies
require("pretty-error").start()
debug = require("debug")("karma:server")
http = require("http")
app = require("../app")

# Normalize a port into a number, string, or false
normalizePort = (val) ->
  port = parseInt(val, 10)

  # Named pipe
  if isNaN(port) then return val

  # Port number
  if port >= 0 then return port

  return false

# Event listener for HTTP server "error" event
onError = (error) ->
  if error.syscall isnt "listen" then throw error

  bind = if typeof port is "string" then "Pipe #{port}" else "Port #{port}"

  # Handle specific listen errors with friendly messages
  switch error.code
    when "EACCES"
      debug("#{bind} requires elevated privileges")
      process.exit 1
    when "EADDRINUSE"
      debug("#{bind} is already in use")
      process.exit 1
    else throw error

  return

# Event listener for HTTP server "listening" event
onListening = ->
  addr = server.address()
  bind = if typeof addr is "string" then "Pipe #{addr}" else "Port #{addr.port}"
  debug("Listening on #{bind}")

  return

# Get port from environment and set in Express
port = normalizePort(process.env.PORT or "80")
app.set("port", port)

# Create HTTP server
server = http.createServer(app)

# Listen on provided port, on all network interfaces
server.listen port
server.on "error", onError
server.on "listening", onListening
